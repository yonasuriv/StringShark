#!/bin/bash

# Detect the OS
detect_os() {
    case "$(uname -s)" in
        Linux*)     os=Linux;;
        Darwin*)    os=Mac;;
        CYGWIN*|MINGW*) os=Windows;;
        *)          os="UNKNOWN:${unameOut}"
    esac
}

# Function to add a directory to the PATH on Windows
add_to_path_windows() {
    install_path="C:/Program Files/sshark"
    # Use PowerShell to add the path permanently for the user
    powershell -Command "[System.Environment]::SetEnvironmentVariable('Path', [System.Environment]::GetEnvironmentVariable('Path', 'User') + ';$install_path', 'User')"
    echo "Added $install_path to the PATH"
}

# Installation function
install_sshark() {
    echo "Installing sshark..."
    
    # Make sshark executable
    chmod +x sshark
    
    # Handle based on OS
    case $os in
        Linux|Mac)
            echo "Detected OS: $os"
            # Move to /usr/bin and force overwrite
            sudo mv -f sshark /usr/bin/
            if [ $? -eq 0 ]; then
                echo "sshark installed successfully to /usr/bin"
            else
                echo "Failed to install sshark"
                exit 1
            fi
            ;;
        Windows)
            echo "Detected OS: $os"
            # Move to Program Files
            install_path="C:/Program Files/sshark"
            mv -f sshark "$install_path"
            if [ $? -eq 0 ]; then
                echo "sshark installed successfully to $install_path"
                # Add the install path to the Windows PATH
                add_to_path_windows
            else
                echo "Failed to install sshark"
                exit 1
            fi
            ;;
        *)
            echo "Unknown or unsupported OS."
            exit 1
            ;;
    esac
}

# Uninstallation function
uninstall_sshark() {
    echo "Uninstalling sshark..."

    # Handle based on OS
    case $os in
        Linux|Mac)
            echo "Detected OS: $os"
            # Remove sshark from /usr/bin
            if [ -f /usr/bin/sshark ]; then
                sudo rm /usr/bin/sshark
                if [ $? -eq 0 ]; then
                    echo "sshark successfully removed from /usr/bin"
                else
                    echo "Failed to remove sshark"
                    exit 1
                fi
            else
                echo "sshark not found in /usr/bin"
            fi
            ;;
        Windows)
            echo "Detected OS: $os"
            # Remove sshark from Program Files
            install_path="C:/Program Files/sshark"
            if [ -f "$install_path/sshark" ]; then
                rm "$install_path/sshark"
                if [ $? -eq 0 ]; then
                    echo "sshark successfully removed from $install_path"
                else
                    echo "Failed to remove sshark"
                    exit 1
                fi
            else
                echo "sshark not found in $install_path"
            fi
            ;;
        *)
            echo "Unknown or unsupported OS."
            exit 1
            ;;
    esac
}

# Main function to handle arguments
main() {
    detect_os  # Detect OS
    
    case "$1" in
        -i|-I)
            install_sshark
            ;;
        -u|-U)
            uninstall_sshark
            ;;
        *)
            echo "Usage: $0 [-i|-I for install] [-u|-U for uninstall]"
            exit 1
            ;;
    esac
}

# Run the main function
main "$@"
