#!/bin/bash

# Detect the OS
detect_os() {
    case "$(uname -s)" in
        Linux*)     os=Linux;;
        Darwin*)    os=Mac;;
        CYGWIN*|MINGW*) os=Windows;;
        *)          os="UNKNOWN:$(uname -s)"
    esac
}

WIN_INSTALL_PATH="C:/Program Files/sshark"
UNIX_INSTALL_PATH="$HOME/.local/bin"

# Function to add a directory to the PATH on Windows
add_to_path_windows() {
    # Use PowerShell to add the path permanently for the user
    powershell -Command "[System.Environment]::SetEnvironmentVariable('Path', [System.Environment]::GetEnvironmentVariable('Path', 'User') + ';$WIN_INSTALL_PATH', 'User')"
    printf "\n   Added $WIN_INSTALL_PATH to the PATH"
}

# Installation function
install_sshark() {
    printf "\nüîµ Installing sshark ü¶à...\n"
    
    # Make sshark executable
    chmod +x sshark
    
    # Handle based on OS
    case $os in
        Linux|Mac)
            printf "\nüêß Detected OS: $os"
            # Move to $UNIX_INSTALL_PATH and force overwrite
            sudo cp -f sshark "$UNIX_INSTALL_PATH/"
            if [ $? -eq 0 ]; then
                printf "\nüü¢ sshark installed successfully to $UNIX_INSTALL_PATH"
            else
                printf "\nüî¥ Failed to install sshark"
                exit 1
            fi
            ;;
        Windows)
            printf "\nü™ü Detected OS: $os"
            # Move to Program Files
            cp -f sshark "$WIN_INSTALL_PATH"
            if [ $? -eq 0 ]; then
                printf "\nüü¢ sshark installed successfully to $WIN_INSTALL_PATH"
                # Add the install path to the Windows PATH
                add_to_path_windows
            else
                printf "\nüî¥ Failed to install sshark"
                exit 1
            fi
            ;;
        *)
            printf "\nüî¥ Unknown or unsupported OS."
            exit 1
            ;;
    esac
}

# Uninstallation function
uninstall_sshark() {
    printf "\nüü† Uninstalling sshark ü¶à...\n"

    # Handle based on OS
    case $os in
        Linux|Mac)
            printf "\nüêß Detected OS: $os"
            # Remove sshark from $UNIX_INSTALL_PATH
            if [ -f "$UNIX_INSTALL_PATH/sshark" ]; then
                sudo rm "$UNIX_INSTALL_PATH/sshark"
                if [ $? -eq 0 ]; then
                    printf "\nüü¢ sshark successfully removed from $UNIX_INSTALL_PATH"
                else
                    printf "\nüî¥ Failed to remove sshark"
                    exit 1
                fi
            else
                printf "\nüî¥ sshark not found in $UNIX_INSTALL_PATH"
            fi
            ;;
        Windows)
            printf "\nü™ü Detected OS: $os"
            # Remove sshark from Program Files
            if [ -f "$WIN_INSTALL_PATH/sshark" ]; then
                rm "$WIN_INSTALL_PATH/sshark"
                if [ $? -eq 0 ]; then
                    printf "\nüü¢ sshark successfully removed from $WIN_INSTALL_PATH"
                else
                    printf "\nüî¥ Failed to remove sshark"
                    exit 1
                fi
            else
                printf "\nüî¥ sshark not found in $WIN_INSTALL_PATH"
            fi
            ;;
        *)
            printf "\nüî¥ Unknown or unsupported OS."
            exit 1
            ;;
    esac
}

# Main function to handle arguments
main() {
    detect_os  # Detect OS
    
    case "$1" in
        -i|-I)
            install_sshark
            ;;
        -u|-U)
            uninstall_sshark
            ;;
        *)
            printf "\nüü° Usage: $0 [-i|-I for install] [-u|-U for uninstall]"
            exit 1
            ;;
    esac
}

# Run the main function
main "$@"
